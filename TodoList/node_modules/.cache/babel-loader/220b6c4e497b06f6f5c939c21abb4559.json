{"ast":null,"code":"var _jsxFileName = \"/home/oldsecond/code/my-react/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Input from './components/Input';\nimport List from './components/List';\nimport Filter from './components/Filter';\nimport './App.css';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [lists, setList] = useState([{\n    id: nanoid(),\n    text: '吃饭',\n    finished: true,\n    show: true\n  }, {\n    id: nanoid(),\n    text: '睡觉',\n    finished: false,\n    show: true\n  }, {\n    id: nanoid(),\n    text: '打游戏',\n    finished: true,\n    show: true\n  }]);\n\n  function changeList(newList) {\n    setList(newList);\n  }\n\n  function addList(list) {\n    const newList = [...lists, list];\n    changeList(newList);\n  }\n\n  function deleteList(id) {\n    const newList = lists.filter(list => list.id !== id);\n    changeList(newList);\n  }\n\n  function startEditList(id) {\n    const newList = lists.map(list => {\n      if (id === list.id) {\n        list.editing = true;\n      }\n\n      return list;\n    });\n    changeList(newList);\n  }\n\n  function finishEditList(id, text) {\n    const newList = lists.map(list => {\n      if (list.id === id) {\n        list.text = text;\n        list.editing = false;\n        return list;\n      } else {\n        return list;\n      }\n    });\n    changeList(newList);\n  }\n\n  function completeList(id, finished) {\n    const newList = lists.map(list => {\n      if (list.id === id) return { ...list,\n        finished\n      };else return list;\n    });\n    changeList(newList);\n  }\n\n  function completeAllList(finished) {\n    const newList = lists.map(list => {\n      return { ...list,\n        finished\n      };\n    });\n    changeList(newList);\n  }\n\n  function clearCompletedList() {\n    const newList = lists.filter(list => list.finished !== true);\n    changeList(newList);\n  }\n\n  function selectAll() {\n    const newList = lists.map(list => {\n      list.show = true;\n      return list;\n    });\n    changeList(newList);\n  }\n\n  function selectCompleted() {\n    const newList = lists.map(list => {\n      if (list.done === true) {\n        list.show = true;\n        return list;\n      } else if (list.done === false) {\n        list.show = false;\n        return list;\n      } else {\n        return list;\n      }\n    });\n    changeList(newList);\n  }\n\n  function selectActive() {\n    const newList = lists.map(list => {\n      if (list.done === true) {\n        list.show = false;\n        return list;\n      } else if (list.done === false) {\n        list.show = true;\n        return list;\n      } else {\n        return list;\n      }\n    });\n    changeList(newList);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoapp\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        lists: lists,\n        addList: addList,\n        completeAllList: completeAllList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        lists: lists,\n        deleteList: deleteList,\n        completeList: completeList,\n        startEditList: startEditList,\n        finishEditList: finishEditList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        lists: lists,\n        clearCompletedList: clearCompletedList,\n        selectAll: selectAll,\n        selectActive: selectActive,\n        selectCompleted: selectCompleted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"Dx46/9clLxoEimMS/kDCn08U6o4=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/oldsecond/code/my-react/src/App.jsx"],"names":["React","useState","Input","List","Filter","nanoid","App","lists","setList","id","text","finished","show","changeList","newList","addList","list","deleteList","filter","startEditList","map","editing","finishEditList","completeList","completeAllList","clearCompletedList","selectAll","selectCompleted","done","selectActive"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Input from './components/Input'\r\nimport List from './components/List'\r\nimport Filter from './components/Filter'\r\nimport './App.css'\r\nimport { nanoid } from 'nanoid'\r\n\r\n\r\nexport default function App() {\r\n    const [lists, setList] = useState([\r\n        {\r\n            id: nanoid(),\r\n            text: '吃饭',\r\n            finished: true,\r\n            show: true\r\n        },\r\n        {\r\n            id: nanoid(),\r\n            text: '睡觉',\r\n            finished: false,\r\n            show: true\r\n        },\r\n        {\r\n            id: nanoid(),\r\n            text: '打游戏',\r\n            finished: true,\r\n            show: true\r\n        }\r\n    ])\r\n\r\n\r\n    function changeList(newList) {\r\n        setList(newList)\r\n    }\r\n\r\n\r\n    function addList(list) {\r\n        const newList = [...lists, list]\r\n        changeList(newList)\r\n    }\r\n\r\n\r\n    function deleteList(id) {\r\n        const newList = lists.filter(list => list.id !== id)\r\n        changeList(newList)\r\n    }\r\n\r\n\r\n    function startEditList(id) {\r\n        const newList = lists.map(list => {\r\n            if (id === list.id) {\r\n                list.editing = true\r\n            }\r\n            return list\r\n        })\r\n        changeList(newList)\r\n    }\r\n\r\n    function finishEditList(id, text) {\r\n        const newList = lists.map(list => {\r\n            if (list.id === id) {\r\n                list.text = text\r\n                list.editing = false\r\n                return list\r\n            } else {\r\n                return list\r\n            }\r\n        })\r\n        changeList(newList)\r\n    }\r\n\r\n\r\n    function completeList(id, finished) {\r\n        const newList = lists.map(list => {\r\n            if (list.id === id)\r\n                return { ...list, finished }\r\n            else\r\n                return list\r\n        })\r\n        changeList(newList)\r\n    }\r\n\r\n\r\n    function completeAllList(finished) {\r\n        const newList = lists.map(list => {\r\n            return { ...list, finished }\r\n        })\r\n        changeList(newList)\r\n    }\r\n\r\n\r\n    function clearCompletedList() {\r\n        const newList = lists.filter(list => list.finished !== true)\r\n        changeList(newList)\r\n    }\r\n\r\n\r\n    function selectAll() {\r\n        const newList = lists.map(list => {\r\n            list.show = true\r\n            return list\r\n        })\r\n        changeList(newList)\r\n    }\r\n\r\n    function selectCompleted() {\r\n        const newList = lists.map(list => {\r\n            if (list.done === true) {\r\n                list.show = true\r\n                return list\r\n            } else if (list.done === false) {\r\n                list.show = false\r\n                return list\r\n            } else {\r\n                return list\r\n            }\r\n        })\r\n        changeList(newList)\r\n    }\r\n\r\n    function selectActive() {\r\n        const newList = lists.map(list => {\r\n            if (list.done === true) {\r\n                list.show = false\r\n                return list\r\n            } else if (list.done === false) {\r\n                list.show = true\r\n                return list\r\n            } else {\r\n                return list\r\n            }\r\n        })\r\n        changeList(newList)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"todoapp\">\r\n                <Input lists={lists} addList={addList} completeAllList={completeAllList} />\r\n                <List lists={lists} deleteList={deleteList} completeList={completeList} startEditList={startEditList} finishEditList={finishEditList} />\r\n                <Filter lists={lists} clearCompletedList={clearCompletedList} selectAll={selectAll} selectActive={selectActive} selectCompleted={selectCompleted} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}